2023-11-22 08:30:21,919 INFO c.e.e.ESmartRecruitApplication [main] Starting ESmartRecruitApplication using Java 19.0.2 with PID 13400 (E:\eSmartRecruit\target\classes started by khang in E:\eSmartRecruit)
2023-11-22 08:30:21,932 DEBUG c.e.e.ESmartRecruitApplication [main] Running with Spring Boot v3.1.4, Spring v6.0.12
2023-11-22 08:30:21,935 INFO c.e.e.ESmartRecruitApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-11-22 08:30:23,359 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:30:23,364 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:30:23,406 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-22 08:30:23,818 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:30:23,820 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-22 08:30:24,139 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 315 ms. Found 6 JPA repository interfaces.
2023-11-22 08:30:24,156 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:30:24,156 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:30:24,174 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ApplicationRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,174 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.InterviewSessionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,175 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.PositionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,175 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ReportRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,176 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.SkillRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,177 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.UserRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:30:24,177 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2023-11-22 08:30:25,687 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-11-22 08:30:25,701 INFO o.a.c.c.StandardService [main] Starting service [Tomcat]
2023-11-22 08:30:25,702 INFO o.a.c.c.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-11-22 08:30:25,873 INFO o.a.c.c.C.[.[.[/] [main] Initializing Spring embedded WebApplicationContext
2023-11-22 08:30:25,874 INFO o.s.b.w.s.c.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 3763 ms
2023-11-22 08:30:26,291 INFO o.h.j.i.u.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-22 08:30:26,417 INFO o.h.Version [main] HHH000412: Hibernate ORM core version 6.2.9.Final
2023-11-22 08:30:26,422 INFO o.h.c.Environment [main] HHH000406: Using bytecode reflection optimizer
2023-11-22 08:30:26,711 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:30:26,954 INFO o.s.o.j.p.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-22 08:30:26,979 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Starting...
2023-11-22 08:30:27,501 INFO c.z.h.p.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@69a76b74
2023-11-22 08:30:27,507 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Start completed.
2023-11-22 08:30:27,660 WARN o.h.o.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-11-22 08:30:28,132 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:30:29,761 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 08:30:30,950 DEBUG c.e.e.c.JwtAuthenticationFilter [main] Filter 'jwtAuthenticationFilter' configured for use
2023-11-22 08:30:31,689 WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-22 08:30:32,405 INFO o.s.s.w.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4203190, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6add8aac, org.springframework.security.web.context.SecurityContextHolderFilter@1d306d27, org.springframework.security.web.header.HeaderWriterFilter@68e8bbab, org.springframework.security.web.authentication.logout.LogoutFilter@3ce60feb, com.example.eSmartRecruit.config.JwtAuthenticationFilter@4bb4cc8c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cb4cad0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15ec3c0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72f5fb36, org.springframework.security.web.session.SessionManagementFilter@35bfa7be, org.springframework.security.web.access.ExceptionTranslationFilter@3b303b78, org.springframework.security.web.access.intercept.AuthorizationFilter@3d94b49d]
2023-11-22 08:30:33,259 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-11-22 08:30:33,274 INFO c.e.e.ESmartRecruitApplication [main] Started ESmartRecruitApplication in 12.076 seconds (process running for 13.845)
2023-11-22 08:31:43,220 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 08:31:43,227 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-22 08:31:43,259 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-22 08:35:43,086 INFO c.e.e.ESmartRecruitApplication [main] Starting ESmartRecruitApplication using Java 19.0.2 with PID 15260 (E:\eSmartRecruit\target\classes started by khang in E:\eSmartRecruit)
2023-11-22 08:35:43,088 DEBUG c.e.e.ESmartRecruitApplication [main] Running with Spring Boot v3.1.4, Spring v6.0.12
2023-11-22 08:35:43,089 INFO c.e.e.ESmartRecruitApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-11-22 08:35:44,017 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:35:44,018 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:35:44,038 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2023-11-22 08:35:44,369 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:35:44,370 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-22 08:35:44,633 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 259 ms. Found 6 JPA repository interfaces.
2023-11-22 08:35:44,647 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:35:44,648 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:35:44,661 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ApplicationRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,663 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.InterviewSessionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,663 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.PositionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,664 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ReportRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,664 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.SkillRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,665 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.UserRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:35:44,666 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2023-11-22 08:35:45,903 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-11-22 08:35:45,917 INFO o.a.c.c.StandardService [main] Starting service [Tomcat]
2023-11-22 08:35:45,918 INFO o.a.c.c.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-11-22 08:35:46,106 INFO o.a.c.c.C.[.[.[/] [main] Initializing Spring embedded WebApplicationContext
2023-11-22 08:35:46,107 INFO o.s.b.w.s.c.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2954 ms
2023-11-22 08:35:46,447 INFO o.h.j.i.u.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-22 08:35:46,525 INFO o.h.Version [main] HHH000412: Hibernate ORM core version 6.2.9.Final
2023-11-22 08:35:46,532 INFO o.h.c.Environment [main] HHH000406: Using bytecode reflection optimizer
2023-11-22 08:35:46,750 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:35:47,030 INFO o.s.o.j.p.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-22 08:35:47,058 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Starting...
2023-11-22 08:35:47,520 INFO c.z.h.p.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41f40dfa
2023-11-22 08:35:47,525 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Start completed.
2023-11-22 08:35:47,597 WARN o.h.o.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-11-22 08:35:47,963 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:35:49,028 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 08:35:49,933 DEBUG c.e.e.c.JwtAuthenticationFilter [main] Filter 'jwtAuthenticationFilter' configured for use
2023-11-22 08:35:50,518 WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-22 08:35:51,003 INFO o.s.s.w.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c39da9e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e38b953, org.springframework.security.web.context.SecurityContextHolderFilter@4548bfc7, org.springframework.security.web.header.HeaderWriterFilter@4dfe5727, org.springframework.security.web.authentication.logout.LogoutFilter@a89dec0, com.example.eSmartRecruit.config.JwtAuthenticationFilter@3599b7e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b303b78, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@672ba9cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a648b35, org.springframework.security.web.session.SessionManagementFilter@34a48013, org.springframework.security.web.access.ExceptionTranslationFilter@45cce4c2, org.springframework.security.web.access.intercept.AuthorizationFilter@47c06b1a]
2023-11-22 08:35:51,660 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-11-22 08:35:51,672 INFO c.e.e.ESmartRecruitApplication [main] Started ESmartRecruitApplication in 9.061 seconds (process running for 10.254)
2023-11-22 08:35:55,346 INFO o.a.c.c.C.[.[.[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-22 08:35:55,347 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-22 08:35:55,349 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-11-22 08:35:55,628 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.register() with argument[s] = [RegisterRequest(username=tranvand, email=d123@gmail.com, password=@Dd123, phoneNumber=0912345678, roleName=Candidate)]
2023-11-22 08:35:55,629 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.register() with argument[s] = [RegisterRequest(username=tranvand, email=d123@gmail.com, password=@Dd123, phoneNumber=0912345678, roleName=Candidate)]
2023-11-22 08:35:55,768 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with argument[s] = [User(id=null, username=tranvand, password=$2a$10$lGOCaJajujS0B/HKUoI6gOYk0QANLgI3T8B88ZDp//8/JyYj.Rb2K, email=d123@gmail.com, phoneNumber=0912345678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 08:35:55,963 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with result = This name already exist!
2023-11-22 08:35:55,965 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-1] Exception in com.example.eSmartRecruit.authentication.AuthenticationService.register() with cause = NULL
2023-11-22 08:35:55,973 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.register() with result = <400 BAD_REQUEST Bad Request,ResponseObject(status=ERROR, message=This name already exist!, data=null),[]>
2023-11-22 08:36:11,487 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 08:36:11,488 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 08:36:11,705 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:36:11,762 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:36:11,762 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:36:12,534 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = null
2023-11-22 08:36:12,535 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs)]
2023-11-22 08:36:12,729 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs)
2023-11-22 08:36:12,729 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs)
2023-11-22 08:36:12,732 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs),[]>
2023-11-22 08:38:17,328 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:38:17,349 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:38:17,350 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:38:17,786 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:38:17,852 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:38:17,860 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:38:17,878 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.createPost() with argument[s] = [Position(id=null, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=null, expireDate=2023-12-01, updateDate=null, location=FPT), SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6c91f0d]]
2023-11-22 08:38:17,890 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:38:17,949 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:38:17,950 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.PositionService.createPost() with argument[s] = [Position(id=null, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=null, expireDate=2023-12-01, updateDate=null, location=FPT)]
2023-11-22 08:38:18,049 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.PositionService.createPost() with result = Position(id=3, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)
2023-11-22 08:38:18,049 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.createPost() with result = <201 CREATED Created,ResponseObject(status=SUCCESS, message=Successfully created!, data={title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, expireDate=2023-12-01, location=FPT}),[]>
2023-11-22 08:38:43,091 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:38:43,094 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:38:43,094 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:38:43,176 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:38:43,184 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:38:43,190 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:38:43,201 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@175b7a63]]
2023-11-22 08:38:43,203 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:38:43,212 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:38:43,212 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 08:38:43,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:38:43,220 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 08:38:43,234 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:38:43,235 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)),[]>
2023-11-22 08:38:46,866 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:38:46,871 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:38:46,871 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:38:46,956 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:38:46,966 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:38:46,976 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:38:46,992 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [3, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@579aeba9]]
2023-11-22 08:38:46,993 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:38:47,003 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:38:47,004 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 08:38:47,009 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:38:47,009 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [3]
2023-11-22 08:38:47,018 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=3, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)
2023-11-22 08:38:47,019 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=Position(id=3, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)),[]>
2023-11-22 08:39:18,827 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:39:18,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:39:18,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:39:18,923 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:39:18,929 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:39:18,936 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:39:18,942 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.deletePosition() with argument[s] = [3, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@204cdfae]]
2023-11-22 08:39:18,942 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:39:18,951 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:39:18,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [3]
2023-11-22 08:39:18,963 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=3, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)
2023-11-22 08:39:18,964 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.deletePosition() with argument[s] = [3]
2023-11-22 08:39:19,010 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.PositionService.deletePosition() with result = null
2023-11-22 08:39:19,012 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.deletePosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Deleted Success, data=null),[]>
2023-11-22 08:39:25,944 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:39:25,946 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:39:25,946 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:39:26,041 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:39:26,046 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:39:26,054 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:39:26,059 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [3, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@372443a1]]
2023-11-22 08:39:26,060 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:39:26,070 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:39:26,070 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 08:39:26,074 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:39:26,075 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [3]
2023-11-22 08:39:26,087 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-1] Exception in com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with cause = NULL
2023-11-22 08:39:26,088 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <403 FORBIDDEN Forbidden,ResponseObject(status=ERROR, message=Position not found, data=null),[]>
2023-11-22 08:39:32,966 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNTQ5MDY3LCJleHAiOjE3MDA1NTI2Njd9.gHFrrZSVy8rQE4p0fd6tuAWXS2Eo0oseoxE7QiRi6Sk]
2023-11-22 08:39:32,972 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-3] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 08:39:32,974 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T07:44:27Z. Current time: 2023-11-22T01:39:32Z, a difference of 64505970 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 08:39:38,170 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:39:38,172 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:39:38,173 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:39:38,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:39:38,263 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:39:38,270 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:39:38,273 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getPositionAdmin() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3493d286]]
2023-11-22 08:39:38,274 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:39:38,282 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:39:38,283 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 08:39:38,287 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:39:38,287 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 08:39:38,291 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 08:39:38,292 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with argument[s] = []
2023-11-22 08:39:38,303 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with result = [Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 08:39:38,304 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 08:39:50,968 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:39:50,971 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:39:50,971 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:39:51,058 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:39:51,068 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:39:51,078 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:39:51,082 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getApplications() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@66ca728b]]
2023-11-22 08:39:51,083 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:39:51,094 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:39:51,094 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 08:39:51,099 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:39:51,100 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 08:39:51,105 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 08:39:51,129 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 08:39:51,139 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:39:51,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [2]
2023-11-22 08:39:51,148 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:39:51,148 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 08:39:51,152 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:39:51,153 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getApplications() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[{applicationID=1, positionTitle=Front-end Dev, status=Pending, applicationDate=2023-10-25}, {applicationID=2, positionTitle=Back-end Dev, status=Pending, applicationDate=2023-10-26}, {applicationID=3, positionTitle=Front-end Dev, status=Pending, applicationDate=2023-11-21}]),[]>
2023-11-22 08:40:20,516 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:40:20,520 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:40:20,521 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:40:20,603 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:40:20,610 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:40:20,619 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:40:20,625 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailApplication() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@68e8232c]]
2023-11-22 08:40:20,626 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:40:20,635 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:40:20,642 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.findById() with argument[s] = [1]
2023-11-22 08:40:20,652 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.findById() with result = User(id=1, username=khang, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=khang123@gmail.com, phoneNumber=0999999999, roleName=Candidate, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:40:20,652 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 08:40:20,659 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:40:20,659 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailApplication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=1, candidateName=khang, positionTitle=Front-end Dev, status=Pending, cv=abc, applicationDate=2023-10-25}),[]>
2023-11-22 08:40:26,540 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNTUxNjk5LCJleHAiOjE3MDA1NTUyOTl9.RiI3HRtQGZ-nqvaXZuGxgxJDM7R1nPszBP6FL-mwlSw]
2023-11-22 08:40:26,545 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-7] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 08:40:26,546 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T08:28:19Z. Current time: 2023-11-22T01:40:26Z, a difference of 61927544 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 08:40:44,584 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:40:44,587 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:40:44,588 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:40:44,671 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:40:44,677 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:40:44,680 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:40:44,683 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getCandidateInformation() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5b8886ae]]
2023-11-22 08:40:44,684 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [1]
2023-11-22 08:40:44,688 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=1, username=khang, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=khang123@gmail.com, phoneNumber=0999999999, roleName=Candidate, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 08:40:44,689 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getCandidateInformation() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={username=khang, email=khang123@gmail.com, phonenumber=0999999999, roleName=Candidate}),[]>
2023-11-22 08:41:08,525 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:41:08,528 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:41:08,528 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:41:08,624 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:41:08,631 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:41:08,640 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:41:08,652 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@8637632], ApplicationResultRequest(status=Approved)]
2023-11-22 08:41:08,652 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with argument[s] = [1, Approved]
2023-11-22 08:41:08,686 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with result = Approve application successfully!
2023-11-22 08:41:08,687 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with argument[s] = [1]
2023-11-22 08:41:08,695 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with result = Application(id=1, candidateID=1, positionID=1, status=Approved, cv=abc, createDate=2023-10-25, updateDate=2023-11-22)
2023-11-22 08:41:08,695 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 08:41:08,703 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 08:41:08,703 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Approve application successfully!, data={applicationID=1, positionTitle=Front-end Dev, status=Approved}),[]>
2023-11-22 08:41:32,298 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 08:41:32,301 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:41:32,301 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:41:32,385 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:41:32,394 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:41:32,404 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:41:32,408 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.listInterviewsession() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5cbd4732]]
2023-11-22 08:41:32,410 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:41:32,417 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:41:32,417 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 08:41:32,421 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 08:41:32,421 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getAllInterviewSession() with argument[s] = []
2023-11-22 08:41:32,433 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getAllInterviewSession() with result = [InterviewSession(id=1, interviewerID=null, ApplicationID=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=NotYet, notes=bcd)]
2023-11-22 08:41:32,434 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.listInterviewsession() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[InterviewSession(id=1, interviewerID=null, ApplicationID=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=NotYet, notes=bcd)]),[]>
2023-11-22 08:47:45,827 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNTQ3OTMwLCJleHAiOjE3MDA1NTE1MzB9.hR389bIueFD1UcjTP7QYfEuAk9XHYDOamkyoopsjrT4]
2023-11-22 08:47:45,833 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-6] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 08:47:45,834 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T07:25:30Z. Current time: 2023-11-22T01:47:45Z, a difference of 66135833 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 08:47:51,423 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 08:47:51,424 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 08:47:51,547 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:47:51,549 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:47:51,550 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:47:51,888 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs
2023-11-22 08:47:51,889 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [abc]
2023-11-22 08:47:52,057 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 08:47:52,057 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M)]
2023-11-22 08:47:52,222 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M)
2023-11-22 08:47:52,222 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M)
2023-11-22 08:47:52,222 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M),[]>
2023-11-22 08:48:02,019 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:48:02,020 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:48:02,021 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:48:02,106 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:48:02,113 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:48:02,117 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:48:02,118 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.home() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@78997770]]
2023-11-22 08:48:02,118 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:48:02,126 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:48:02,126 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with argument[s] = []
2023-11-22 08:48:02,410 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with result = 4
2023-11-22 08:48:02,410 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with argument[s] = []
2023-11-22 08:48:02,419 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with result = 2
2023-11-22 08:48:02,420 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with argument[s] = []
2023-11-22 08:48:02,430 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with result = 3
2023-11-22 08:48:02,430 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with argument[s] = []
2023-11-22 08:48:02,437 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with result = 2
2023-11-22 08:48:02,437 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.home() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={no_user=4, no_position=2, no_application=3, no_interview_session=2}),[]>
2023-11-22 08:48:08,229 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:48:08,231 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:48:08,231 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:48:08,314 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:48:08,319 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:48:08,321 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:48:09,836 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:48:09,837 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:48:09,838 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:48:09,927 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:48:09,931 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:48:09,934 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:48:10,525 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:48:10,527 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:48:10,528 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:48:10,610 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:48:10,614 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:48:10,619 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:51:07,802 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 08:51:07,806 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-22 08:51:07,820 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-22 08:57:42,380 INFO c.e.e.ESmartRecruitApplication [main] Starting ESmartRecruitApplication using Java 19.0.2 with PID 12340 (E:\eSmartRecruit\target\classes started by khang in E:\eSmartRecruit)
2023-11-22 08:57:42,381 DEBUG c.e.e.ESmartRecruitApplication [main] Running with Spring Boot v3.1.4, Spring v6.0.12
2023-11-22 08:57:42,382 INFO c.e.e.ESmartRecruitApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-11-22 08:57:43,407 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:57:43,408 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:57:43,430 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2023-11-22 08:57:43,748 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:57:43,749 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-22 08:57:43,920 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 166 ms. Found 6 JPA repository interfaces.
2023-11-22 08:57:43,932 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 08:57:43,933 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 08:57:43,943 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ApplicationRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,944 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.InterviewSessionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,945 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.PositionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,945 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ReportRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,946 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.SkillRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,946 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.UserRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 08:57:43,946 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-22 08:57:45,280 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-11-22 08:57:45,293 INFO o.a.c.c.StandardService [main] Starting service [Tomcat]
2023-11-22 08:57:45,295 INFO o.a.c.c.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-11-22 08:57:45,438 INFO o.a.c.c.C.[.[.[/] [main] Initializing Spring embedded WebApplicationContext
2023-11-22 08:57:45,439 INFO o.s.b.w.s.c.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 3002 ms
2023-11-22 08:57:45,735 INFO o.h.j.i.u.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-22 08:57:45,800 INFO o.h.Version [main] HHH000412: Hibernate ORM core version 6.2.9.Final
2023-11-22 08:57:45,803 INFO o.h.c.Environment [main] HHH000406: Using bytecode reflection optimizer
2023-11-22 08:57:46,000 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:57:46,168 INFO o.s.o.j.p.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-22 08:57:46,190 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Starting...
2023-11-22 08:57:46,538 INFO c.z.h.p.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a1c7619
2023-11-22 08:57:46,540 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Start completed.
2023-11-22 08:57:46,587 WARN o.h.o.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-11-22 08:57:46,843 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 08:57:47,641 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 08:57:48,292 DEBUG c.e.e.c.JwtAuthenticationFilter [main] Filter 'jwtAuthenticationFilter' configured for use
2023-11-22 08:57:48,763 WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-22 08:57:49,185 INFO o.s.s.w.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@41bd8ec9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d306d27, org.springframework.security.web.context.SecurityContextHolderFilter@240a717d, org.springframework.security.web.header.HeaderWriterFilter@6eac71db, org.springframework.security.web.authentication.logout.LogoutFilter@7bd6c35e, com.example.eSmartRecruit.config.JwtAuthenticationFilter@1407b93f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1eff74f2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@238cac6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@557abb68, org.springframework.security.web.session.SessionManagementFilter@62b3871, org.springframework.security.web.access.ExceptionTranslationFilter@7053b64b, org.springframework.security.web.access.intercept.AuthorizationFilter@35bfa7be]
2023-11-22 08:57:49,694 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-11-22 08:57:49,704 INFO c.e.e.ESmartRecruitApplication [main] Started ESmartRecruitApplication in 7.797 seconds (process running for 9.107)
2023-11-22 08:57:52,332 INFO o.a.c.c.C.[.[.[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-22 08:57:52,332 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-22 08:57:52,334 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-11-22 08:57:52,362 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:57:52,452 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:57:52,453 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:57:52,929 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:57:53,135 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:57:53,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:57:53,181 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.home() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@204521d6]]
2023-11-22 08:57:53,188 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:57:53,231 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:57:53,231 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with argument[s] = []
2023-11-22 08:57:53,462 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with result = 4
2023-11-22 08:57:53,462 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with argument[s] = []
2023-11-22 08:57:53,473 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with result = 2
2023-11-22 08:57:53,473 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with argument[s] = []
2023-11-22 08:57:53,485 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with result = 3
2023-11-22 08:57:53,486 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with argument[s] = []
2023-11-22 08:57:53,500 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with result = 2
2023-11-22 08:57:53,514 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.home() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={no_user=4, no_position=2, no_application=3, no_interview_session=2}),[]>
2023-11-22 08:57:59,343 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:57:59,345 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:57:59,345 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:57:59,426 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:57:59,435 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:57:59,441 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:58:10,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M]
2023-11-22 08:58:10,833 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 08:58:10,834 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 08:58:10,917 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M
2023-11-22 08:58:10,925 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE3NjcxLCJleHAiOjE3MDA2MjEyNzF9.FaV_a4paC49VzffgcBVwBoHfeYcd2DfytaDf2inwC7M, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 08:58:10,936 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 08:58:10,940 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.home() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5dcbedf5]]
2023-11-22 08:58:10,941 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 08:58:10,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 08:58:10,954 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with argument[s] = []
2023-11-22 08:58:10,966 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with result = 4
2023-11-22 08:58:10,967 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with argument[s] = []
2023-11-22 08:58:10,976 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with result = 2
2023-11-22 08:58:10,977 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with argument[s] = []
2023-11-22 08:58:10,985 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with result = 3
2023-11-22 08:58:10,986 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with argument[s] = []
2023-11-22 08:58:10,996 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with result = 2
2023-11-22 08:58:10,996 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.home() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={no_user=4, no_position=2, no_application=3, no_interview_session=2}),[]>
2023-11-22 10:00:20,727 WARN c.z.h.p.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m5s86ms469µs700ns).
2023-11-22 10:02:16,434 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 10:02:16,450 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-22 10:02:16,450 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-22 10:22:13,226 INFO c.e.e.ESmartRecruitApplication [main] Starting ESmartRecruitApplication using Java 19.0.2 with PID 19264 (E:\eSmartRecruit\target\classes started by khang in E:\eSmartRecruit)
2023-11-22 10:22:13,227 DEBUG c.e.e.ESmartRecruitApplication [main] Running with Spring Boot v3.1.4, Spring v6.0.12
2023-11-22 10:22:13,229 INFO c.e.e.ESmartRecruitApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-11-22 10:22:14,131 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 10:22:14,132 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 10:22:14,155 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2023-11-22 10:22:14,443 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 10:22:14,444 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-22 10:22:14,619 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 169 ms. Found 6 JPA repository interfaces.
2023-11-22 10:22:14,631 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 10:22:14,632 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-22 10:22:14,643 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ApplicationRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,643 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.InterviewSessionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,644 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.PositionRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,645 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.ReportRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,646 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.SkillRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,646 INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.eSmartRecruit.repositories.UserRepos; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-22 10:22:14,647 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-22 10:22:15,702 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-11-22 10:22:15,714 INFO o.a.c.c.StandardService [main] Starting service [Tomcat]
2023-11-22 10:22:15,715 INFO o.a.c.c.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-11-22 10:22:15,834 INFO o.a.c.c.C.[.[.[/] [main] Initializing Spring embedded WebApplicationContext
2023-11-22 10:22:15,834 INFO o.s.b.w.s.c.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2550 ms
2023-11-22 10:22:16,133 INFO o.h.j.i.u.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-22 10:22:16,216 INFO o.h.Version [main] HHH000412: Hibernate ORM core version 6.2.9.Final
2023-11-22 10:22:16,219 INFO o.h.c.Environment [main] HHH000406: Using bytecode reflection optimizer
2023-11-22 10:22:16,404 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 10:22:16,594 INFO o.s.o.j.p.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-22 10:22:16,624 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Starting...
2023-11-22 10:22:17,061 INFO c.z.h.p.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c3679e5
2023-11-22 10:22:17,063 INFO c.z.h.HikariDataSource [main] HikariPool-1 - Start completed.
2023-11-22 10:22:17,114 WARN o.h.o.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-11-22 10:22:17,403 INFO o.h.b.i.BytecodeProviderInitiator [main] HHH000021: Bytecode provider name : bytebuddy
2023-11-22 10:22:18,244 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 10:22:18,889 DEBUG c.e.e.c.JwtAuthenticationFilter [main] Filter 'jwtAuthenticationFilter' configured for use
2023-11-22 10:22:19,346 WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-22 10:22:19,676 INFO o.s.s.w.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@61799152, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c39da9e, org.springframework.security.web.context.SecurityContextHolderFilter@210e4678, org.springframework.security.web.header.HeaderWriterFilter@9d4d221, org.springframework.security.web.authentication.logout.LogoutFilter@68fb6c1e, com.example.eSmartRecruit.config.JwtAuthenticationFilter@2bc21edd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@557c0b65, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dfaa2f0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e38b953, org.springframework.security.web.session.SessionManagementFilter@2298d741, org.springframework.security.web.access.ExceptionTranslationFilter@2bcaec2e, org.springframework.security.web.access.intercept.AuthorizationFilter@13482361]
2023-11-22 10:22:20,146 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-11-22 10:22:20,156 INFO c.e.e.ESmartRecruitApplication [main] Started ESmartRecruitApplication in 7.427 seconds (process running for 8.457)
2023-11-22 10:22:37,866 INFO o.a.c.c.C.[.[.[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-22 10:22:37,867 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-22 10:22:37,869 INFO o.s.w.s.DispatcherServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-11-22 10:22:37,929 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.home() with argument[s] = []
2023-11-22 10:22:37,931 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with argument[s] = []
2023-11-22 10:22:38,142 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with result = [Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:22:38,152 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.home() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=List Position Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 10:23:02,682 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with argument[s] = [Front-end Dev]
2023-11-22 10:23:02,683 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with argument[s] = [Front-end Dev]
2023-11-22 10:23:02,725 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with result = [Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:23:02,725 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Search Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 10:23:32,644 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.register() with argument[s] = [RegisterRequest(username=tranvand, email=d123@gmail.com, password=@Dd123, phoneNumber=0912345678, roleName=Candidate)]
2023-11-22 10:23:32,645 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.register() with argument[s] = [RegisterRequest(username=tranvand, email=d123@gmail.com, password=@Dd123, phoneNumber=0912345678, roleName=Candidate)]
2023-11-22 10:23:32,781 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with argument[s] = [User(id=null, username=tranvand, password=$2a$10$KIbXbux0HD.3jnqODWj82.f/58i5DMpC5xPfGBxAvvcXxQMBRtwMy, email=d123@gmail.com, phoneNumber=0912345678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:23:32,792 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with result = This name already exist!
2023-11-22 10:23:32,793 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-5] Exception in com.example.eSmartRecruit.authentication.AuthenticationService.register() with cause = NULL
2023-11-22 10:23:32,794 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.register() with result = <400 BAD_REQUEST Bad Request,ResponseObject(status=ERROR, message=This name already exist!, data=null),[]>
2023-11-22 10:24:16,986 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.register() with argument[s] = [RegisterRequest(username=levanm, email=m123@gmail.com, password=@Mm123, phoneNumber=0913045678, roleName=Candidate)]
2023-11-22 10:24:16,986 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.register() with argument[s] = [RegisterRequest(username=levanm, email=m123@gmail.com, password=@Mm123, phoneNumber=0913045678, roleName=Candidate)]
2023-11-22 10:24:17,080 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with argument[s] = [User(id=null, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:24:17,096 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.checkDuplicate() with result = null
2023-11-22 10:24:17,187 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:24:17,244 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk
2023-11-22 10:24:17,245 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk)]
2023-11-22 10:24:18,193 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk)
2023-11-22 10:24:18,194 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.register() with result = ResponseObject(status=SUCCESS, message=Register successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk)
2023-11-22 10:24:18,195 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.register() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Register successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk),[]>
2023-11-22 10:24:45,123 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:24:45,123 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:24:45,354 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:24:45,356 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:24:45,356 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:24:45,451 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDU3LCJleHAiOjE3MDA2MjcwNTd9.sCi5qJfJvWRKuKbg567lOLFfHFmk0Ts4HhvE5ff7FSk
2023-11-22 10:24:45,452 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [levanm]
2023-11-22 10:24:45,620 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 10:24:45,621 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y)]
2023-11-22 10:24:45,793 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y)
2023-11-22 10:24:45,793 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y)
2023-11-22 10:24:45,794 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y),[]>
2023-11-22 10:25:28,911 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:25:28,944 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:25:28,945 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:25:29,037 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:25:29,101 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:25:29,108 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:25:29,114 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getDetailPosition() with argument[s] = [1]
2023-11-22 10:25:29,116 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:25:29,137 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:25:29,138 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getDetailPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)),[]>
2023-11-22 10:26:03,807 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:26:03,810 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:26:03,811 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:26:03,900 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:26:03,909 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:26:03,914 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:26:03,962 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.applyForPosition() with argument[s] = [1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@3e9b6d5b, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@bb64475]
2023-11-22 10:26:03,967 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:26:03,977 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:26:03,977 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.PositionService.isPresent() with argument[s] = [1]
2023-11-22 10:26:03,983 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.PositionService.isPresent() with result = true
2023-11-22 10:26:03,983 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with argument[s] = [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@bb64475]
2023-11-22 10:26:03,994 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with result = 3eacd556274c4584b7effadb6d2e8eac.pdf
2023-11-22 10:26:03,997 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.apply() with argument[s] = [Application(id=null, candidateID=5, positionID=1, status=Pending, cv=3eacd556274c4584b7effadb6d2e8eac.pdf, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:26:04,015 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.apply() with result = Successfully applied!
2023-11-22 10:26:04,015 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.applyForPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Successfully applied!, data=null),[]>
2023-11-22 10:26:19,375 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:26:19,379 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:26:19,380 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:26:19,459 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:26:19,466 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:26:19,470 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:26:19,473 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getDetailUser() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@175b319e]]
2023-11-22 10:26:19,474 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:26:19,479 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:26:19,480 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:26:19,489 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:26:19,489 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getDetailUser() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={username=levanm, email=m123@gmail.com, phonenumber=0913045678}),[]>
2023-11-22 10:26:52,589 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0cmFudmFuZCIsImp0aSI6IjQiLCJpYXQiOjE3MDA1Mzk4NTcsImV4cCI6MTcwMDU0MzQ1N30.JLoX4vp6j-RGOiTkNSzTdWkFQLe4EzzPuz5Xt8D6kI4]
2023-11-22 10:26:52,592 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-2] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:26:52,593 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T05:10:57Z. Current time: 2023-11-22T03:26:52Z, a difference of 80155591 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:27:09,903 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:27:09,906 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:27:09,906 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:27:10,094 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:27:10,106 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913045678, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:27:10,114 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:27:10,124 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.updateUser() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7c10e0a4], UserRequest(email=m123@gmail.com, phoneNumber=0913322555)]
2023-11-22 10:27:10,125 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:27:10,136 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:27:10,137 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.updateUser() with argument[s] = [UserRequest(email=m123@gmail.com, phoneNumber=0913322555), 5]
2023-11-22 10:27:10,191 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.updateUser() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:27:10,192 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.updateUser() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data={email=m123@gmail.com, phoneNumber=0913322555}),[]>
2023-11-22 10:27:29,462 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:27:29,465 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:27:29,465 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:27:29,547 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:27:29,551 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:27:29,554 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:27:29,556 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6d47165c]]
2023-11-22 10:27:29,556 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:27:29,564 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:27:29,564 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:27:29,566 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:27:29,566 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with argument[s] = [5]
2023-11-22 10:27:29,570 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with result = [Application(id=6, candidateID=5, positionID=1, status=Pending, cv=3eacd556274c4584b7effadb6d2e8eac.pdf, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:27:29,570 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:27:29,577 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:27:29,577 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[{applicationID=6, positionTitle=Front-end Dev, status=Pending, applicationDate=2023-11-22}]),[]>
2023-11-22 10:28:12,950 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:28:12,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:28:12,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:28:13,054 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:28:13,063 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:28:13,072 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:28:13,082 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with argument[s] = [6, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@67286a77]]
2023-11-22 10:28:13,082 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:28:13,089 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:28:13,090 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:28:13,096 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:28:13,096 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [6]
2023-11-22 10:28:13,105 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with result = Application(id=6, candidateID=5, positionID=1, status=Pending, cv=3eacd556274c4584b7effadb6d2e8eac.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:28:13,106 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:28:13,113 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:28:13,113 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=6, candidateName=levanm, positionTitle=Front-end Dev, status=Pending, cv=3eacd556274c4584b7effadb6d2e8eac.pdf, applicationDate=2023-11-22}),[]>
2023-11-22 10:28:54,604 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:28:54,608 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:28:54,608 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:28:54,745 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:28:54,752 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:28:54,758 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:28:54,769 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.updateApplyPosition() with argument[s] = [6, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@66ca728b, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@61fd5ed0]
2023-11-22 10:28:54,770 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:28:54,775 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:28:54,776 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with argument[s] = [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@61fd5ed0]
2023-11-22 10:28:54,781 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with result = 176af4754ace497580bdb3878f537df9.pdf
2023-11-22 10:28:54,782 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.update() with argument[s] = [5, Application(id=null, candidateID=null, positionID=null, status=null, cv=176af4754ace497580bdb3878f537df9.pdf, createDate=null, updateDate=null), 6]
2023-11-22 10:28:54,802 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.update() with result = Updated Successfully
2023-11-22 10:28:54,802 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.updateApplyPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data=null),[]>
2023-11-22 10:29:11,697 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0cmFudmFuZCIsImp0aSI6IjQiLCJpYXQiOjE3MDA1Mzk4NTcsImV4cCI6MTcwMDU0MzQ1N30.JLoX4vp6j-RGOiTkNSzTdWkFQLe4EzzPuz5Xt8D6kI4]
2023-11-22 10:29:11,702 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-7] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:29:11,703 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T05:10:57Z. Current time: 2023-11-22T03:29:11Z, a difference of 80294701 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:29:15,596 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:29:15,599 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:29:15,600 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:29:15,694 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:29:15,703 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:29:15,711 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:29:15,716 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.deleteApplyPosition() with argument[s] = [6, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@60ed324e]]
2023-11-22 10:29:15,716 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:29:15,724 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:29:15,724 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.deletejob() with argument[s] = [5, 6]
2023-11-22 10:29:15,757 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.deletejob() with result = Deleted Success
2023-11-22 10:29:15,758 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.deleteApplyPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Deleted Success, data=null),[]>
2023-11-22 10:29:25,795 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:29:25,798 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:29:25,798 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:29:25,879 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:29:25,882 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:29:25,891 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:29:25,892 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6140c537]]
2023-11-22 10:29:25,892 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:29:25,897 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:29:25,898 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:29:25,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:29:25,903 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with argument[s] = [5]
2023-11-22 10:29:25,907 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with result = []
2023-11-22 10:29:25,907 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Application not found!, data=[]),[]>
2023-11-22 10:29:38,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 10:29:38,835 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:29:38,835 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:29:38,922 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:29:38,930 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:29:38,939 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:29:38,945 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.applyForPosition() with argument[s] = [1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@66580734, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4611d87c]
2023-11-22 10:29:38,947 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:29:38,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:29:38,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.PositionService.isPresent() with argument[s] = [1]
2023-11-22 10:29:38,958 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.PositionService.isPresent() with result = true
2023-11-22 10:29:38,958 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with argument[s] = [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4611d87c]
2023-11-22 10:29:38,968 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.FileStorageService.storeFile() with result = 59fe57d139f24d3bb2e41b38e1b88504.pdf
2023-11-22 10:29:38,969 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.apply() with argument[s] = [Application(id=null, candidateID=5, positionID=1, status=Pending, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:29:38,982 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.apply() with result = Successfully applied!
2023-11-22 10:29:38,982 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.applyForPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Successfully applied!, data=null),[]>
2023-11-22 10:29:54,301 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 10:29:54,301 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 10:29:54,409 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:29:54,411 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:29:54,411 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:29:54,494 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = null
2023-11-22 10:29:54,495 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c)]
2023-11-22 10:29:54,737 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c)
2023-11-22 10:29:54,738 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c)
2023-11-22 10:29:54,738 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c),[]>
2023-11-22 10:30:11,224 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:30:11,226 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:30:11,227 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:30:11,323 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:30:11,327 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:30:11,332 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:30:11,338 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.home() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6f941b92]]
2023-11-22 10:30:11,338 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:30:11,346 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:30:11,347 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with argument[s] = []
2023-11-22 10:30:11,734 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.getcountUser() with result = 5
2023-11-22 10:30:11,735 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with argument[s] = []
2023-11-22 10:30:11,746 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.PositionService.getcountPosition() with result = 2
2023-11-22 10:30:11,746 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with argument[s] = []
2023-11-22 10:30:11,760 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getcountApplication() with result = 4
2023-11-22 10:30:11,761 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with argument[s] = []
2023-11-22 10:30:11,767 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getCountInterview() with result = 2
2023-11-22 10:30:11,768 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.home() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={no_user=5, no_position=2, no_application=4, no_interview_session=2}),[]>
2023-11-22 10:30:46,963 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:30:46,964 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:30:46,965 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:30:47,078 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:30:47,087 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:30:47,095 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:30:47,097 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getProfile() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@53dcd631]]
2023-11-22 10:30:47,097 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:30:47,101 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:30:47,102 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:30:47,104 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:30:47,104 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getProfile() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={username=abc, email=abc123@gmail.com, phonenumber=0988888888}),[]>
2023-11-22 10:31:43,548 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:31:43,550 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:31:43,550 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:31:43,634 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:31:43,642 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:31:43,657 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:31:43,661 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@60080dc8], UserRequest(email=abc123@gmail.com, phoneNumber=0988888888)]
2023-11-22 10:31:43,662 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:31:43,667 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:31:43,667 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.updateUser() with argument[s] = [UserRequest(email=abc123@gmail.com, phoneNumber=0988888888), 2]
2023-11-22 10:31:43,681 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.updateUser() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:31:43,681 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data={email=abc123@gmail.com, phoneNumber=0988888888}),[]>
2023-11-22 10:31:48,721 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:31:48,724 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:31:48,725 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:31:48,812 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:31:48,821 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:31:48,825 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:31:48,828 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1194824a], UserRequest(email=bbc123@gmail.com, phoneNumber=0988888888)]
2023-11-22 10:31:48,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:31:48,836 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:31:48,838 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.updateUser() with argument[s] = [UserRequest(email=bbc123@gmail.com, phoneNumber=0988888888), 2]
2023-11-22 10:31:48,861 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.updateUser() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=bbc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:31:48,861 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data={email=bbc123@gmail.com, phoneNumber=0988888888}),[]>
2023-11-22 10:31:54,794 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:31:54,796 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:31:54,796 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:31:54,954 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:31:54,959 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=bbc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:31:54,962 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:31:54,964 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5d6df784], UserRequest(email=abc123@gmail.com, phoneNumber=0988888888)]
2023-11-22 10:31:54,964 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:31:54,972 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:31:54,972 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.updateUser() with argument[s] = [UserRequest(email=abc123@gmail.com, phoneNumber=0988888888), 2]
2023-11-22 10:31:54,996 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.updateUser() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:31:54,997 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateProfile() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data={email=abc123@gmail.com, phoneNumber=0988888888}),[]>
2023-11-22 10:32:08,033 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:32:08,036 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:32:08,037 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:32:08,116 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:32:08,122 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:32:08,126 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:32:08,127 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getPositionAdmin() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@37a3031c]]
2023-11-22 10:32:08,127 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:32:08,135 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:32:08,135 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:32:08,137 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:32:08,137 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 10:32:08,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 10:32:08,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with argument[s] = []
2023-11-22 10:32:08,149 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.PositionService.getAllPosition() with result = [Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:32:08,149 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 10:32:45,525 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:32:45,527 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-4] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:32:45,528 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:32:45Z, a difference of 3394527 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:32:50,681 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:32:50,685 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:32:50,685 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:32:50,975 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:32:50,985 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:32:50,988 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:32:51,003 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.createPost() with argument[s] = [Position(id=null, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=null, expireDate=2023-12-01, updateDate=null, location=FPT), SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@309b932c]]
2023-11-22 10:32:51,003 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:32:51,010 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:32:51,010 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.PositionService.createPost() with argument[s] = [Position(id=null, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=null, expireDate=2023-12-01, updateDate=null, location=FPT)]
2023-11-22 10:32:51,023 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.PositionService.createPost() with result = Position(id=4, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)
2023-11-22 10:32:51,024 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.createPost() with result = <201 CREATED Created,ResponseObject(status=SUCCESS, message=Successfully created!, data={title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, expireDate=2023-12-01, location=FPT}),[]>
2023-11-22 10:33:25,114 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:33:25,116 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-9] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:33:25,116 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:33:25Z, a difference of 3434116 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:33:29,463 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:33:29,465 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:33:29,465 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:33:29,553 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:33:29,560 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:33:29,564 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:33:29,567 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [3, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2cc16161]]
2023-11-22 10:33:29,568 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:33:29,576 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:33:29,576 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:33:29,580 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:33:29,580 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [3]
2023-11-22 10:33:29,584 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-10] Exception in com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with cause = NULL
2023-11-22 10:33:29,584 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <403 FORBIDDEN Forbidden,ResponseObject(status=ERROR, message=Position not found, data=null),[]>
2023-11-22 10:33:37,840 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:33:37,844 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:33:37,844 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:33:37,928 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:33:37,937 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:33:37,944 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:33:37,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [2, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@25cfc3d2]]
2023-11-22 10:33:37,953 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:33:37,962 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:33:37,962 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:33:37,970 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:33:37,970 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [2]
2023-11-22 10:33:37,979 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:33:37,979 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)),[]>
2023-11-22 10:34:39,526 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:34:39,531 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:34:39,531 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:34:39,618 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:34:39,623 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:34:39,631 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:34:39,649 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.editPosition() with argument[s] = [1, PositionRequest(title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, expireDate=2023-12-01, location=fpt), SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6907735]]
2023-11-22 10:34:39,649 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:34:39,653 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:34:39,653 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:34:39,657 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=abc, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:34:39,658 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.editPosition() with argument[s] = [1, Position(id=null, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=null, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:34:39,680 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.editPosition() with result = Updated Successfully
2023-11-22 10:34:39,680 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.editPosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data=null),[]>
2023-11-22 10:34:50,443 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:34:50,446 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:34:50,446 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:34:52,456 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-8] Exception in com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with cause = redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: Read timed out
2023-11-22 10:34:52,456 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.data.redis.RedisConnectionFailureException: java.net.SocketTimeoutException: Read timed out
	at org.springframework.data.redis.connection.jedis.JedisExceptionConverter.convert(JedisExceptionConverter.java:67)
	at org.springframework.data.redis.connection.jedis.JedisExceptionConverter.convert(JedisExceptionConverter.java:42)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.jedis.JedisConnection.convertJedisAccessException(JedisConnection.java:215)
	at org.springframework.data.redis.connection.jedis.JedisConnection.doWithJedis(JedisConnection.java:699)
	at org.springframework.data.redis.connection.jedis.JedisConnection.doInvoke(JedisConnection.java:188)
	at org.springframework.data.redis.connection.jedis.JedisConnection.lambda$new$0(JedisConnection.java:89)
	at org.springframework.data.redis.connection.jedis.JedisInvoker$Synchronizer.invoke(JedisInvoker.java:1023)
	at org.springframework.data.redis.connection.jedis.JedisInvoker.just(JedisInvoker.java:136)
	at org.springframework.data.redis.connection.jedis.JedisHashCommands.hGet(JedisHashCommands.java:98)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGet(DefaultedRedisConnection.java:1374)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$get$0(DefaultHashOperations.java:51)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:406)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.get(DefaultHashOperations.java:51)
	at com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername(TokenRepos.java:30)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.repositories.redis.TokenRepos$$SpringCGLIB$$0.findTokenByUsername(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: Read timed out
	at redis.clients.jedis.util.RedisInputStream.ensureFill(RedisInputStream.java:208)
	at redis.clients.jedis.util.RedisInputStream.readByte(RedisInputStream.java:46)
	at redis.clients.jedis.Protocol.process(Protocol.java:126)
	at redis.clients.jedis.Protocol.read(Protocol.java:192)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:316)
	at redis.clients.jedis.Connection.getOne(Connection.java:298)
	at redis.clients.jedis.Connection.executeCommand(Connection.java:123)
	at redis.clients.jedis.Jedis.hget(Jedis.java:1168)
	at org.springframework.data.redis.connection.jedis.JedisInvoker.lambda$just$5(JedisInvoker.java:136)
	at org.springframework.data.redis.connection.jedis.JedisConnection.lambda$doInvoke$2(JedisConnection.java:204)
	at org.springframework.data.redis.connection.jedis.JedisConnection.doWithJedis(JedisConnection.java:696)
	... 91 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:273)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:299)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:340)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:789)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1025)
	at java.base/java.io.InputStream.read(InputStream.java:217)
	at redis.clients.jedis.util.RedisInputStream.ensureFill(RedisInputStream.java:202)
	... 101 common frames omitted
2023-11-22 10:35:01,382 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:35:01,384 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:35:01,384 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:35:05,326 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-7] Exception in com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with cause = redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: Read timed out
2023-11-22 10:35:05,327 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.data.redis.RedisConnectionFailureException: Cannot get Jedis connection
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:276)
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:459)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.get(DefaultHashOperations.java:51)
	at com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername(TokenRepos.java:30)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.repositories.redis.TokenRepos$$SpringCGLIB$$0.findTokenByUsername(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: Read timed out
	at redis.clients.jedis.util.RedisInputStream.ensureFill(RedisInputStream.java:208)
	at redis.clients.jedis.util.RedisInputStream.readByte(RedisInputStream.java:46)
	at redis.clients.jedis.Protocol.process(Protocol.java:126)
	at redis.clients.jedis.Protocol.read(Protocol.java:192)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:316)
	at redis.clients.jedis.Connection.getStatusCodeReply(Connection.java:243)
	at redis.clients.jedis.Connection.auth(Connection.java:377)
	at redis.clients.jedis.Connection.initializeFromClientConfig(Connection.java:343)
	at redis.clients.jedis.Connection.<init>(Connection.java:53)
	at redis.clients.jedis.Jedis.<init>(Jedis.java:214)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:181)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at redis.clients.jedis.util.Pool.getResource(Pool.java:34)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:373)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:17)
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:267)
	... 88 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:273)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:299)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:340)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:789)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1025)
	at java.base/java.io.InputStream.read(InputStream.java:217)
	at redis.clients.jedis.util.RedisInputStream.ensureFill(RedisInputStream.java:202)
	... 105 common frames omitted
2023-11-22 10:35:12,858 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:35:12,860 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:35:12,860 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:35:13,239 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:35:13,245 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:35:13,253 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:35:13,256 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5fb9fccd]]
2023-11-22 10:35:13,256 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:35:13,261 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:35:13,261 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:35:13,265 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:35:13,265 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:35:13,272 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:35:13,272 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)),[]>
2023-11-22 10:35:52,551 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:35:52,553 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-6] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:35:52,554 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:35:52Z, a difference of 3581553 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:36:02,038 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:36:02,040 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-9] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:36:02,040 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:36:02Z, a difference of 3591040 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:36:06,741 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:36:06,743 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:36:06,743 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:36:06,843 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:36:06,853 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:36:06,856 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:36:06,859 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.deletePosition() with argument[s] = [4, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5caaf410]]
2023-11-22 10:36:06,859 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:36:06,863 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:36:06,864 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [4]
2023-11-22 10:36:06,870 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=4, title=Security, jobDescription=Security, jobRequirements=Not, salary=1000, postDate=2023-11-22, expireDate=2023-12-01, updateDate=2023-11-22, location=FPT)
2023-11-22 10:36:06,870 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.PositionService.deletePosition() with argument[s] = [4]
2023-11-22 10:36:06,886 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.PositionService.deletePosition() with result = null
2023-11-22 10:36:06,886 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.deletePosition() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Deleted Success, data=null),[]>
2023-11-22 10:36:19,221 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:36:19,223 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:36:19,224 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:36:19,304 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:36:19,307 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:36:19,314 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:36:19,320 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with argument[s] = [4, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@77e5bd8e]]
2023-11-22 10:36:19,320 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:36:19,326 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:36:19,326 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:36:19,332 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:36:19,332 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [4]
2023-11-22 10:36:19,339 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-2] Exception in com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with cause = NULL
2023-11-22 10:36:19,340 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailPositionAdmin() with result = <403 FORBIDDEN Forbidden,ResponseObject(status=ERROR, message=Position not found, data=null),[]>
2023-11-22 10:36:33,435 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:36:33,437 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:36:33,437 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:36:33,522 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:36:33,530 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:36:33,537 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:36:33,542 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getApplications() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1ab129fd]]
2023-11-22 10:36:33,543 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:36:33,551 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:36:33,551 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [2]
2023-11-22 10:36:33,559 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:36:33,559 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 10:36:33,564 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 10:36:33,575 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:36:33,580 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:36:33,580 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [2]
2023-11-22 10:36:33,584 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:36:33,584 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:36:33,586 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:36:33,586 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:36:33,587 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:36:33,588 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getApplications() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[{applicationID=1, positionTitle=Front-end Dev, status=Approved, applicationDate=2023-10-25}, {applicationID=2, positionTitle=Back-end Dev, status=Pending, applicationDate=2023-10-26}, {applicationID=3, positionTitle=Front-end Dev, status=Pending, applicationDate=2023-11-21}, {applicationID=7, positionTitle=Front-end Dev, status=Pending, applicationDate=2023-11-22}]),[]>
2023-11-22 10:37:02,476 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:37:02,481 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-3] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:37:02,482 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:37:02Z, a difference of 3651480 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:37:05,643 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:37:05,647 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:37:05,648 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:37:05,866 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:37:05,872 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:37:05,877 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:37:05,883 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailApplication() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1bcc9ce9]]
2023-11-22 10:37:05,883 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:37:05,887 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:37:05,891 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.findById() with argument[s] = [5]
2023-11-22 10:37:05,896 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.findById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:37:05,897 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:37:05,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:37:05,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailApplication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=7, candidateName=levanm, positionTitle=Front-end Dev, status=Pending, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, applicationDate=2023-11-22}),[]>
2023-11-22 10:38:16,773 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:38:16,777 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:38:16,777 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:38:16,869 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:38:16,875 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:38:16,882 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:38:16,886 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getCandidateInformation() with argument[s] = [5, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@696defc1]]
2023-11-22 10:38:16,887 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:38:16,894 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:38:16,894 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getCandidateInformation() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={username=levanm, email=m123@gmail.com, phonenumber=0913322555, roleName=Candidate}),[]>
2023-11-22 10:38:45,901 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:38:45,904 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-6] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:38:45,905 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:38:45Z, a difference of 3754904 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:38:55,119 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:38:55,121 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:38:55,121 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:38:55,213 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:38:55,217 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:38:55,220 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:38:55,229 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6fe8a218], ApplicationResultRequest(status=Approved)]
2023-11-22 10:38:55,229 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with argument[s] = [7, Approved]
2023-11-22 10:38:55,246 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with result = Approve application successfully!
2023-11-22 10:38:55,246 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with argument[s] = [7]
2023-11-22 10:38:55,248 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with result = Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:38:55,248 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:38:55,252 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:38:55,252 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Approve application successfully!, data={applicationID=7, positionTitle=Front-end Dev, status=Approved}),[]>
2023-11-22 10:39:33,583 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjE2OTcxLCJleHAiOjE3MDA2MjA1NzF9.v4jTpRgPfrCcBJGX3xYylbwBGx3NBhlroSve76beBjs]
2023-11-22 10:39:33,585 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-10] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:39:33,586 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-22T02:36:11Z. Current time: 2023-11-22T03:39:33Z, a difference of 3802585 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:39:37,714 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:39:37,717 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:39:37,717 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:39:37,817 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:39:37,821 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:39:37,825 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:39:37,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2900371c], ApplicationResultRequest(status=Declined)]
2023-11-22 10:39:37,830 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with argument[s] = [7, Declined]
2023-11-22 10:39:37,840 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with result = Decline application successfully!
2023-11-22 10:39:37,840 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with argument[s] = [7]
2023-11-22 10:39:37,843 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with result = Application(id=7, candidateID=5, positionID=1, status=Declined, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:39:37,843 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:39:37,850 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:39:37,850 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Decline application successfully!, data={applicationID=7, positionTitle=Front-end Dev, status=Declined}),[]>
2023-11-22 10:39:46,124 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:39:46,128 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:39:46,128 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:39:46,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:39:46,224 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:39:46,231 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:39:46,234 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@45697583], ApplicationResultRequest(status=Approved)]
2023-11-22 10:39:46,234 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with argument[s] = [7, Approved]
2023-11-22 10:39:46,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.adminUpdate() with result = Approve application successfully!
2023-11-22 10:39:46,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with argument[s] = [7]
2023-11-22 10:39:46,259 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.findById() with result = Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:39:46,260 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:39:46,266 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:39:46,266 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.updateApplicationStatus() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Approve application successfully!, data={applicationID=7, positionTitle=Front-end Dev, status=Approved}),[]>
2023-11-22 10:40:29,661 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:40:29,664 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:40:29,664 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:40:29,746 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:40:29,755 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:40:29,764 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:40:29,767 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.listInterviewsession() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@72bb079a]]
2023-11-22 10:40:29,768 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:40:29,774 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:40:29,774 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with argument[s] = [2]
2023-11-22 10:40:29,779 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserRole() with result = Admin
2023-11-22 10:40:29,779 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.getAllInterviewSession() with argument[s] = []
2023-11-22 10:40:29,793 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.getAllInterviewSession() with result = [InterviewSession(id=1, interviewerID=null, ApplicationID=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=NotYet, notes=bcd)]
2023-11-22 10:40:29,795 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.listInterviewsession() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[InterviewSession(id=1, interviewerID=null, ApplicationID=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=NotYet, notes=bcd)]),[]>
2023-11-22 10:40:50,530 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:40:50,533 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:40:50,533 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:40:50,754 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:40:50,761 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:40:50,766 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:40:50,770 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailInterviewSession() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@29f8ae8d]]
2023-11-22 10:40:50,771 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:40:50,778 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:40:50,778 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with argument[s] = [1]
2023-11-22 10:40:50,785 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with result = InterviewSession(id=1, interviewerID=null, ApplicationID=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc)
2023-11-22 10:40:50,785 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getDetailInterviewSession() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={id=1, interviewid=null, applicationid=1, date=2023-10-29, location=fpt, status=NotOnSchedule, result=Good, notes=abc}),[]>
2023-11-22 10:41:36,764 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:41:36,766 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:41:36,766 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:41:36,850 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:41:36,857 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:41:36,864 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:41:36,892 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.scheduleInterview() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7b4c5b6b], InterviewSessionRequest(interviewerId=3, date=2023-12-01, location=fpt, notes=early, result=null)]
2023-11-22 10:41:36,893 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.scheduleInterview() with argument[s] = [1, InterviewSessionRequest(interviewerId=3, date=2023-12-01, location=fpt, notes=early, result=null)]
2023-11-22 10:41:36,910 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.scheduleInterview() with result = InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early)
2023-11-22 10:41:36,910 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.scheduleInterview() with argument[s] = [1, InterviewSessionRequest(interviewerId=3, date=2023-12-01, location=fpt, notes=early, result=null)]
2023-11-22 10:41:36,915 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.scheduleInterview() with result = InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early)
2023-11-22 10:41:36,915 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.scheduleInterview() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Schedule successfully!, data=InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early)),[]>
2023-11-22 10:42:09,483 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:42:09,486 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:42:09,486 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:42:09,576 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:42:09,582 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:42:09,586 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:42:09,588 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getReport() with argument[s] = [2, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1a90004a]]
2023-11-22 10:42:09,589 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.ReportService.getReportBySessionId() with argument[s] = [2]
2023-11-22 10:42:09,605 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.ReportService.getReportBySessionId() with result = Report(id=2, sessionID=2, reportName=Programming skills, reportData=10, createDate=2023-10-24, updateDate=2023-10-24)
2023-11-22 10:42:09,605 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getReport() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={id=2, report_name=Programming skills, report_data=10, createDate=2023-10-24, updateDate=2023-10-24}),[]>
2023-11-22 10:42:51,754 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c]
2023-11-22 10:42:51,756 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = abc
2023-11-22 10:42:51,756 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:42:51,841 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:42:51,848 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c, User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:42:51,853 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:42:51,868 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.admin.AdminController.getEvaluate() with argument[s] = [2, EvaluateRequest(result=Good), SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@ac5cdef]]
2023-11-22 10:42:51,869 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [2]
2023-11-22 10:42:51,875 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:42:51,875 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.interviewUpdate() with argument[s] = [2, Good]
2023-11-22 10:42:51,900 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.interviewUpdate() with result = Successfully evaluated!
2023-11-22 10:42:51,900 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with argument[s] = [2]
2023-11-22 10:42:51,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with result = InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=Good, notes=bcd)
2023-11-22 10:42:51,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.admin.AdminController.getEvaluate() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Successfully evaluated!, data={id=2, interviewerID=3, applicationID=1, date=2023-10-25, location=fpt, status=Yet, result=Good, notes=bcd}),[]>
2023-11-22 10:43:14,342 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 10:43:14,342 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 10:43:14,494 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=b123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:43:14,497 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:43:14,498 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:43:14,829 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = null
2023-11-22 10:43:14,829 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4)]
2023-11-22 10:43:15,015 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4)
2023-11-22 10:43:15,015 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4)
2023-11-22 10:43:15,015 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4),[]>
2023-11-22 10:43:29,698 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:43:29,704 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:43:29,704 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:43:29,787 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:43:29,791 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=b123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:43:29,795 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:43:29,797 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getInterviewerSession() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7b0efce7]]
2023-11-22 10:43:29,797 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:43:29,804 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:43:29,804 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByInterviewerID() with argument[s] = [3]
2023-11-22 10:43:29,809 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByInterviewerID() with result = [InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=Good, notes=bcd)]
2023-11-22 10:43:29,809 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getInterviewerSession() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early), InterviewSession(id=2, interviewerID=3, ApplicationID=1, date=2023-10-25, location=fpt, status=Yet, result=Good, notes=bcd)]),[]>
2023-11-22 10:44:03,963 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjZGUiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNTUzMDIwLCJleHAiOjE3MDA1NTY2MjB9.e8SNdpQtfc0rPGNFI0suGsEbTpmefInUtOBQ_XszYqA]
2023-11-22 10:44:03,965 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-10] Exception in com.example.eSmartRecruit.config.JwtService.extractUserName() with cause = NULL
2023-11-22 10:44:03,965 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-11-21T08:50:20Z. Current time: 2023-11-22T03:44:03Z, a difference of 68023964 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.eSmartRecruit.config.JwtService.extractAllClaims(JwtService.java:78)
	at com.example.eSmartRecruit.config.JwtService.extractClaim(JwtService.java:27)
	at com.example.eSmartRecruit.config.JwtService.extractUserName(JwtService.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.eSmartRecruit.aop.LogAspect.logAround(LogAspect.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.eSmartRecruit.config.JwtService$$SpringCGLIB$$0.extractUserName(<generated>)
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 10:44:07,182 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:44:07,184 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:44:07,184 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:44:07,281 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:44:07,288 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=b123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:44:07,295 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:44:07,298 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getDetailUserInterviewer() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@44cbfb6e]]
2023-11-22 10:44:07,299 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:44:07,307 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:44:07,307 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [3]
2023-11-22 10:44:07,310 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=b123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:44:07,311 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getDetailUserInterviewer() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={phonenumber=0977777777, email=b123@gmail.com, username=bcd}),[]>
2023-11-22 10:44:31,302 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:44:31,304 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:44:31,304 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:44:31,428 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:44:31,434 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=b123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:44:31,437 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:44:31,443 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.updateUserInterviewer() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@ac53e92], UserRequest(email=c123@gmail.com, phoneNumber=0977777777)]
2023-11-22 10:44:31,444 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:44:31,451 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:44:31,451 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.services.impl.UserService.updateUser() with argument[s] = [UserRequest(email=c123@gmail.com, phoneNumber=0977777777), 3]
2023-11-22 10:44:31,474 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.services.impl.UserService.updateUser() with result = User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 10:44:31,474 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.updateUserInterviewer() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Updated Successfully, data={phoneNumber=0977777777, email=c123@gmail.com, username=bcd}),[]>
2023-11-22 10:44:50,001 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:44:50,003 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:44:50,003 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:44:50,203 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:44:50,211 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:44:50,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:46:29,646 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:46:29,648 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:46:29,648 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:46:30,372 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:46:30,378 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:46:30,381 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:46:30,383 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getCandidateInformation() with argument[s] = [4, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6c619086]]
2023-11-22 10:46:30,384 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:46:30,390 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:46:30,390 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [4]
2023-11-22 10:46:30,395 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=4, username=tranvand, password=$2a$10$eUDa/FdKcC.fmMmbOqGGM.ViBGiw9grCzfnBSEyfaFI2b0f3CuNei, email=d123@gmail.com, phoneNumber=0912345678, roleName=Candidate, status=Active, createDate=2023-11-21, updateDate=2023-11-21)
2023-11-22 10:46:30,395 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getCandidateInformation() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={phonenumber=0912345678, email=d123@gmail.com, username=tranvand}),[]>
2023-11-22 10:47:07,139 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:47:07,141 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:47:07,141 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:47:07,237 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:47:07,242 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:47:07,247 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:48:02,169 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:48:02,171 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:48:02,172 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:48:02,270 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:48:02,279 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:48:02,283 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:48:02,287 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.findByInterviewSessionID() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5b38fd01]]
2023-11-22 10:48:02,287 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:48:02,297 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:48:02,297 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with argument[s] = [1]
2023-11-22 10:48:02,304 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.findByID() with result = InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early)
2023-11-22 10:48:02,305 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.findByInterviewSessionID() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=InterviewSession(id=1, interviewerID=3, ApplicationID=1, date=2023-12-01, location=fpt, status=Yet, result=Good, notes=early)),[]>
2023-11-22 10:49:18,909 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:49:18,910 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:49:18,910 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:49:19,000 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:49:19,006 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:49:19,009 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:49:19,020 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@66e71588], ReportRequest(ReportName=Evaluate, ReportData=Good)]
2023-11-22 10:49:19,020 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:49:19,024 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:49:19,024 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with argument[s] = [1]
2023-11-22 10:49:19,030 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with result = false
2023-11-22 10:49:19,030 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with result = <400 BAD_REQUEST Bad Request,ResponseObject(status=ERROR, message=Interview Session not already done, data=null),[]>
2023-11-22 10:49:31,930 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:49:31,931 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:49:31,931 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:49:32,137 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:49:32,147 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:49:32,150 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:49:32,153 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with argument[s] = [2, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5beca6c9], ReportRequest(ReportName=Evaluate, ReportData=Good)]
2023-11-22 10:49:32,153 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:49:32,158 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:49:32,158 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with argument[s] = [2]
2023-11-22 10:49:32,165 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with result = false
2023-11-22 10:49:32,165 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with result = <400 BAD_REQUEST Bad Request,ResponseObject(status=ERROR, message=Interview Session not already done, data=null),[]>
2023-11-22 10:50:07,022 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:50:07,024 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:50:07,025 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:50:07,123 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:50:07,130 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:50:07,136 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:50:07,139 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@45616327], ReportRequest(ReportName=Evaluate, ReportData=Good)]
2023-11-22 10:50:07,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:50:07,144 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:50:07,144 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with argument[s] = [7]
2023-11-22 10:50:07,151 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-8] Exception in com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with cause = NULL
2023-11-22 10:50:07,151 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with result = <500 INTERNAL_SERVER_ERROR Internal Server Error,ResponseObject(status=ERROR, message=Position not found, data=null),[]>
2023-11-22 10:50:17,785 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4]
2023-11-22 10:50:17,787 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:50:17,788 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:50:17,897 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:50:17,902 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:50:17,907 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:50:17,913 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with argument[s] = [2, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@51981b23], ReportRequest(ReportName=Evaluate, ReportData=Good)]
2023-11-22 10:50:17,914 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:50:17,920 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:50:17,920 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with argument[s] = [2]
2023-11-22 10:50:17,927 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with result = false
2023-11-22 10:50:17,928 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with result = <400 BAD_REQUEST Bad Request,ResponseObject(status=ERROR, message=Interview Session not already done, data=null),[]>
2023-11-22 10:51:16,530 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:51:16,530 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:51:16,649 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:51:16,650 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw
2023-11-22 10:51:16,650 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:51:16,731 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y
2023-11-22 10:51:16,732 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [levanm]
2023-11-22 10:51:16,920 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 10:51:16,920 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw)]
2023-11-22 10:51:17,177 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw)
2023-11-22 10:51:17,177 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw)
2023-11-22 10:51:17,177 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw),[]>
2023-11-22 10:51:30,195 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw]
2023-11-22 10:51:30,197 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:51:30,197 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:51:30,279 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw
2023-11-22 10:51:30,286 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:51:30,292 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:51:30,294 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with argument[s] = [SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4eaf2a62]]
2023-11-22 10:51:30,294 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:51:30,299 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:51:30,300 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:51:30,302 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:51:30,302 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with argument[s] = [5]
2023-11-22 10:51:30,306 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationsByCandidateId() with result = [Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:51:30,308 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:51:30,312 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:51:30,312 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getMyApplications() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data=[{applicationID=7, positionTitle=Front-end Dev, status=Approved, applicationDate=2023-11-22}]),[]>
2023-11-22 10:51:43,217 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw]
2023-11-22 10:51:43,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:51:43,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:51:43,361 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw
2023-11-22 10:51:43,370 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:51:43,373 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:51:43,375 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with argument[s] = [6, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5e636e4]]
2023-11-22 10:51:43,376 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:51:43,380 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:51:43,381 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:51:43,385 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:51:43,385 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [6]
2023-11-22 10:51:43,390 ERROR c.e.e.a.LogAspect [http-nio-8080-exec-2] Exception in com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with cause = NULL
2023-11-22 10:51:43,390 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with result = <500 INTERNAL_SERVER_ERROR Internal Server Error,ResponseObject(status=ERROR, message=Application not found!, data=null),[]>
2023-11-22 10:51:48,173 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw]
2023-11-22 10:51:48,174 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:51:48,174 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:51:48,256 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw
2023-11-22 10:51:48,259 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:51:48,265 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:51:48,267 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@658bf164]]
2023-11-22 10:51:48,268 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:51:48,274 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:51:48,274 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:51:48,278 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:51:48,278 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [7]
2023-11-22 10:51:48,284 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with result = Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:51:48,285 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:51:48,290 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:51:48,290 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=7, candidateName=levanm, positionTitle=Front-end Dev, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, applicationDate=2023-11-22}),[]>
2023-11-22 10:53:34,150 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with argument[s] = [Dev]
2023-11-22 10:53:34,150 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with argument[s] = [Dev]
2023-11-22 10:53:34,154 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with result = [Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:53:34,154 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Search Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt), Position(id=2, title=Back-end Dev, jobDescription=bcd, jobRequirements=bcd, salary=2000, postDate=2023-10-25, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 10:54:02,394 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with argument[s] = [F]
2023-11-22 10:54:02,394 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with argument[s] = [F]
2023-11-22 10:54:02,397 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.PositionService.searchPositions() with result = [Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)]
2023-11-22 10:54:02,398 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.guest.GuestController.searchJob() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Search Successfully, data=[Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)]),[]>
2023-11-22 10:56:04,327 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 10:56:04,327 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 10:56:04,463 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:56:04,466 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ
2023-11-22 10:56:04,466 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:56:04,817 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI0NTk0LCJleHAiOjE3MDA2MjgxOTR9.AuIro5ujjqN_2Va2PbA6TX-gDZNqFUHqcdY8YYmXlB4
2023-11-22 10:56:04,817 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [bcd]
2023-11-22 10:56:04,975 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 10:56:04,976 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ)]
2023-11-22 10:56:05,155 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ)
2023-11-22 10:56:05,155 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ)
2023-11-22 10:56:05,155 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-10] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ),[]>
2023-11-22 10:56:21,160 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ]
2023-11-22 10:56:21,161 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 10:56:21,162 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 10:56:21,281 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ
2023-11-22 10:56:21,286 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:56:21,292 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:56:21,295 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with argument[s] = [2, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@53b83e87], ReportRequest(ReportName=Evaluate, ReportData=Good)]
2023-11-22 10:56:21,296 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [3]
2023-11-22 10:56:21,301 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:56:21,302 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with argument[s] = [2]
2023-11-22 10:56:21,307 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.InterviewSessionService.isAlready() with result = true
2023-11-22 10:56:21,309 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.services.impl.ReportService.reportInterviewSession() with argument[s] = [Report(id=null, sessionID=2, reportName=Evaluate, reportData=Good, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:56:21,316 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.services.impl.ReportService.reportInterviewSession() with result = Report Successfully!
2023-11-22 10:56:21,316 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.reportInterviewSession() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Report Successfully!, data=null),[]>
2023-11-22 10:56:48,472 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:56:48,473 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 10:56:48,591 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:56:48,593 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18
2023-11-22 10:56:48,593 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:56:48,674 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1MDc2LCJleHAiOjE3MDA2Mjg2NzZ9.vT8qry5E4GDXzqSGqZMptUir-uUZCldC9VTN68dS2jw
2023-11-22 10:56:48,674 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [levanm]
2023-11-22 10:56:48,833 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 10:56:48,834 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18)]
2023-11-22 10:56:49,000 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18)
2023-11-22 10:56:49,000 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18)
2023-11-22 10:56:49,000 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-1] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18),[]>
2023-11-22 10:57:00,903 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18]
2023-11-22 10:57:00,904 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 10:57:00,904 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 10:57:00,991 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18
2023-11-22 10:57:00,996 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 10:57:00,999 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 10:57:01,001 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@60e2359a]]
2023-11-22 10:57:01,001 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with argument[s] = [5]
2023-11-22 10:57:01,008 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.isEnabled() with result = true
2023-11-22 10:57:01,009 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 10:57:01,011 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:57:01,011 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [7]
2023-11-22 10:57:01,016 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with result = Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 10:57:01,016 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 10:57:01,019 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 10:57:01,021 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.controllers.candidate.CandidateController.getApplicationDetails() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=7, candidateName=levanm, positionTitle=Front-end Dev, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, applicationDate=2023-11-22}),[]>
2023-11-22 10:57:20,310 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 10:57:20,310 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=abc, password=khang123)]
2023-11-22 10:57:20,421 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=2, username=abc, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=abc123@gmail.com, phoneNumber=0988888888, roleName=Admin, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 10:57:20,423 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI1NDQwLCJleHAiOjE3MDA2MjkwNDB9.Zrr6q01veO2rDxNWL-XvCYUuhJte9FwXc6GCFrgbt30
2023-11-22 10:57:20,423 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [abc]
2023-11-22 10:57:20,513 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjIzNzk0LCJleHAiOjE3MDA2MjczOTR9.ODH5iFySrBDtaUqBR4zDd5WtyspjQYiXG6H8I5Ir96c
2023-11-22 10:57:20,513 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [abc]
2023-11-22 10:57:20,675 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 10:57:20,675 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI1NDQwLCJleHAiOjE3MDA2MjkwNDB9.Zrr6q01veO2rDxNWL-XvCYUuhJte9FwXc6GCFrgbt30)]
2023-11-22 10:57:20,868 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=abc, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI1NDQwLCJleHAiOjE3MDA2MjkwNDB9.Zrr6q01veO2rDxNWL-XvCYUuhJte9FwXc6GCFrgbt30)
2023-11-22 10:57:20,869 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI1NDQwLCJleHAiOjE3MDA2MjkwNDB9.Zrr6q01veO2rDxNWL-XvCYUuhJte9FwXc6GCFrgbt30)
2023-11-22 10:57:20,869 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-5] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhYmMiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI1NDQwLCJleHAiOjE3MDA2MjkwNDB9.Zrr6q01veO2rDxNWL-XvCYUuhJte9FwXc6GCFrgbt30),[]>
2023-11-22 11:05:46,695 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjIzNDg1LCJleHAiOjE3MDA2MjcwODV9.bqi22x0csvNA_cpYOj1o88SokEENXimTCw0FeTwf_8Y]
2023-11-22 11:05:46,698 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 11:05:46,698 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 11:05:47,140 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18
2023-11-22 11:05:47,141 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filter execution threw an exception] with root cause
com.example.eSmartRecruit.exception.AuthenticationException: Invalid token
	at com.example.eSmartRecruit.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-11-22 11:06:02,531 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 11:06:02,531 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=levanm, password=@Mm123)]
2023-11-22 11:06:02,632 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 11:06:02,634 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk
2023-11-22 11:06:02,634 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 11:06:02,718 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1NDA4LCJleHAiOjE3MDA2MjkwMDh9.vpoV4FR9QjCqUBt_G4Go7W_ky01K7ESIbrx3NGVZS18
2023-11-22 11:06:02,718 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [levanm]
2023-11-22 11:06:02,892 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 11:06:02,892 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk)]
2023-11-22 11:06:03,051 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=levanm, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk)
2023-11-22 11:06:03,051 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk)
2023-11-22 11:06:03,051 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk),[]>
2023-11-22 11:06:20,603 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk]
2023-11-22 11:06:20,605 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 11:06:20,605 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 11:06:20,712 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk
2023-11-22 11:06:20,717 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 11:06:20,722 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-9] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:06:33,269 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk]
2023-11-22 11:06:33,270 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 11:06:33,270 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 11:06:33,349 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk
2023-11-22 11:06:33,354 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 11:06:33,357 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-2] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:07:21,245 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk]
2023-11-22 11:07:21,246 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = levanm
2023-11-22 11:07:21,246 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [levanm]
2023-11-22 11:07:21,349 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk
2023-11-22 11:07:21,354 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsZXZhbm0iLCJqdGkiOiI1IiwiaWF0IjoxNzAwNjI1OTYyLCJleHAiOjE3MDA2Mjk1NjJ9.dhllDSt_4Evfrv68KO8Y6NbIHDaRnz0RXbz2ufh2fnk, User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)]
2023-11-22 11:07:21,357 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-3] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:20:23,121 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 11:20:23,122 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with argument[s] = [AuthenticationRequest(username=bcd, password=khang123)]
2023-11-22 11:20:23,217 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.config.JwtService.generateToken() with argument[s] = [User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 11:20:23,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.config.JwtService.generateToken() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM
2023-11-22 11:20:23,219 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 11:20:23,798 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI1MzY0LCJleHAiOjE3MDA2Mjg5NjR9.boOm90AIuywyL0_WO7_K6hbUsRKnHrujm9829iu8fSQ
2023-11-22 11:20:23,798 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with argument[s] = [bcd]
2023-11-22 11:20:24,092 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.deleteToken() with result = Logout successfully!
2023-11-22 11:20:24,092 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with argument[s] = [Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM)]
2023-11-22 11:20:24,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.save() with result = Token(username=bcd, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM)
2023-11-22 11:20:24,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.authentication.AuthenticationService.authenticate() with result = ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM)
2023-11-22 11:20:24,254 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-8] Exit: com.example.eSmartRecruit.authentication.AuthenticationController.authentication() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Sign in successfully!, data=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM),[]>
2023-11-22 11:20:35,419 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM]
2023-11-22 11:20:35,421 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 11:20:35,421 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 11:20:35,503 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM
2023-11-22 11:20:35,509 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 11:20:35,513 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-7] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:20:50,125 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM]
2023-11-22 11:20:50,127 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 11:20:50,127 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 11:20:50,212 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM
2023-11-22 11:20:50,218 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 11:20:50,221 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:20:50,222 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getApplicationDetails() with argument[s] = [1, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7927773d]]
2023-11-22 11:20:50,222 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [1]
2023-11-22 11:20:50,228 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with result = Application(id=1, candidateID=1, positionID=1, status=Approved, cv=abc, createDate=2023-10-25, updateDate=2023-11-22)
2023-11-22 11:20:50,229 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [1]
2023-11-22 11:20:50,234 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=1, username=khang, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=khang123@gmail.com, phoneNumber=0999999999, roleName=Candidate, status=Active, createDate=2023-11-11, updateDate=2023-11-11)
2023-11-22 11:20:50,234 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 11:20:50,238 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 11:20:50,238 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-4] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getApplicationDetails() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=1, candidateName=khang, positionTitle=Front-end Dev, status=Approved, cv=abc, applicationDate=2023-10-25}),[]>
2023-11-22 11:20:57,808 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.extractUserName() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM]
2023-11-22 11:20:57,809 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.extractUserName() with result = bcd
2023-11-22 11:20:57,809 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with argument[s] = [bcd]
2023-11-22 11:20:57,899 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.repositories.redis.TokenRepos.findTokenByUsername() with result = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM
2023-11-22 11:20:57,905 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.config.JwtService.isTokenValid() with argument[s] = [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIzIiwiaWF0IjoxNzAwNjI2ODIzLCJleHAiOjE3MDA2MzA0MjN9.LxMdN6NHAlP220zaQgj4yD6960UWvL6KAIYQNMljFdM, User(id=3, username=bcd, password=$2a$10$S5x1eUGgsbXA4RJfrnc07ueCheYAVNMXsqw23/HfivFQJsaowrTXW, email=c123@gmail.com, phoneNumber=0977777777, roleName=Interviewer, status=Active, createDate=2023-11-11, updateDate=2023-11-11)]
2023-11-22 11:20:57,908 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.config.JwtService.isTokenValid() with result = true
2023-11-22 11:20:57,909 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getApplicationDetails() with argument[s] = [7, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1f8bc7bd]]
2023-11-22 11:20:57,909 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with argument[s] = [7]
2023-11-22 11:20:57,913 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.ApplicationService.getApplicationById() with result = Application(id=7, candidateID=5, positionID=1, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 11:20:57,913 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.UserService.getUserById() with argument[s] = [5]
2023-11-22 11:20:57,917 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.UserService.getUserById() with result = User(id=5, username=levanm, password=$2a$10$aonC6pj3VhhOQ6JOrBpPa.QGV8HKAR4IjYb64M/YIFz.PejzXv4d., email=m123@gmail.com, phoneNumber=0913322555, roleName=Candidate, status=Active, createDate=2023-11-22, updateDate=2023-11-22)
2023-11-22 11:20:57,917 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Enter: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with argument[s] = [1]
2023-11-22 11:20:57,923 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.services.impl.PositionService.getSelectedPosition() with result = Position(id=1, title=Front-end Dev, jobDescription=bcd, jobRequirements=abc, salary=1000, postDate=2023-10-26, expireDate=2023-12-01, updateDate=null, location=fpt)
2023-11-22 11:20:57,924 DEBUG c.e.e.a.LogAspect [http-nio-8080-exec-6] Exit: com.example.eSmartRecruit.controllers.interviewer.InterviewerController.getApplicationDetails() with result = <200 OK OK,ResponseObject(status=SUCCESS, message=Loading Successfully, data={applicationID=7, candidateName=levanm, positionTitle=Front-end Dev, status=Approved, cv=59fe57d139f24d3bb2e41b38e1b88504.pdf, applicationDate=2023-11-22}),[]>
2023-11-22 11:24:00,924 INFO o.s.o.j.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 11:24:00,931 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-22 11:24:00,935 INFO c.z.h.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-22 11:25:18,738 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTE4LCJleHAiOjE3MDA2MzA3MTh9.UQQUfF6ce3iHDKuJx2cM4Icm9E9cv0fpl2HSHOaiC5k
2023-11-22 11:25:18,790 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTE4LCJleHAiOjE3MDA2MzA3MTh9.UQQUfF6ce3iHDKuJx2cM4Icm9E9cv0fpl2HSHOaiC5k
2023-11-22 11:25:18,792 ERROR c.e.e.c.a.AdminController [main] Internal Server Error: Error getting users
com.example.eSmartRecruit.exception.UserException: Error getting users
	at com.example.eSmartRecruit.services.impl.UserService.getAllUser(UserService.java:29)
	at com.example.eSmartRecruit.controllers.admin.AdminController.getUsers(AdminController.java:245)
	at com.example.eSmartRecruit.controllers.admin.AdminControllerTest.getUsers_shouldReturnInternalServerErrorResponseWhenCatchUserException(AdminControllerTest.java:366)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2023-11-22 11:25:19,290 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTE5LCJleHAiOjE3MDA2MzA3MTl9.RHN7GXjdo5mIPBbYfTsuS2Z5yztTmSWvjCPH2h3pdw0
2023-11-22 11:25:19,307 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTE5LCJleHAiOjE3MDA2MzA3MTl9.RHN7GXjdo5mIPBbYfTsuS2Z5yztTmSWvjCPH2h3pdw0
2023-11-22 11:25:19,308 INFO c.e.e.c.a.AdminController [main] Returning user list. Total users: 2
2023-11-22 11:25:19,419 ERROR c.e.e.c.a.AdminController [main] Error in getReport
com.example.eSmartRecruit.exception.ApplicationException: null
2023-11-22 11:25:24,500 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTI0LCJleHAiOjE3MDA2MzA3MjR9.7T7aPBe3y6uluuFFyEswY1cgfJVb93d-08dJvezGLpg
2023-11-22 11:25:24,525 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTI0LCJleHAiOjE3MDA2MzA3MjR9.7T7aPBe3y6uluuFFyEswY1cgfJVb93d-08dJvezGLpg
2023-11-22 11:25:24,528 ERROR c.e.e.c.a.AdminController [main] Internal Server Error: Error getting users
com.example.eSmartRecruit.exception.UserException: Error getting users
	at com.example.eSmartRecruit.services.impl.UserService.getAllUser(UserService.java:29)
	at com.example.eSmartRecruit.controllers.admin.AdminController.getUsers(AdminController.java:245)
	at com.example.eSmartRecruit.controllers.admin.AdminControllerTest.getUsers_shouldReturnInternalServerErrorResponseWhenCatchUserException(AdminControllerTest.java:366)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2023-11-22 11:25:24,799 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTI0LCJleHAiOjE3MDA2MzA3MjR9.7T7aPBe3y6uluuFFyEswY1cgfJVb93d-08dJvezGLpg
2023-11-22 11:25:24,810 INFO c.e.e.c.a.AdminController [main] Received request to get users. Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiY2QiLCJqdGkiOiIyIiwiaWF0IjoxNzAwNjI3MTI0LCJleHAiOjE3MDA2MzA3MjR9.7T7aPBe3y6uluuFFyEswY1cgfJVb93d-08dJvezGLpg
2023-11-22 11:25:24,811 INFO c.e.e.c.a.AdminController [main] Returning user list. Total users: 2
2023-11-22 11:25:24,877 ERROR c.e.e.c.a.AdminController [main] Error in getReport
com.example.eSmartRecruit.exception.ApplicationException: null
